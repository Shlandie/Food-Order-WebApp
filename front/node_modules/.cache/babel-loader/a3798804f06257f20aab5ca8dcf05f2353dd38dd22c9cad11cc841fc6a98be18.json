{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gra\\u017Ei Diena\\\\Desktop\\\\Programmin\\\\School\\\\Praktika\\\\front\\\\src\\\\components\\\\MenuEditAdmin\\\\MenuEditAdmin.js\";\nimport React, { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MenuEditAdmin() {\n  var _s = $RefreshSig$();\n  function ToggleButtonExample() {\n    _s();\n    const [checked, setChecked] = useState(false);\n    const [radioValue, setRadioValue] = useState('1');\n    const radios = [{\n      name: 'Active',\n      value: '1'\n    }, {\n      name: 'Radio',\n      value: '2'\n    }, {\n      name: 'Radio',\n      value: '3'\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `radio-${idx}`,\n          type: \"radio\",\n          variant: idx % 2 ? 'outline-success' : 'outline-danger',\n          name: \"radio\",\n          value: radio.value,\n          checked: radioValue === radio.value,\n          onChange: e => setRadioValue(e.currentTarget.value),\n          children: radio.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  _s(ToggleButtonExample, \"u8HBHezDv6+Ud4vmWbnEkotqWsM=\");\n}\n_c = MenuEditAdmin;\nexport default MenuEditAdmin;\nvar _c;\n$RefreshReg$(_c, \"MenuEditAdmin\");","map":{"version":3,"names":["React","useState","ButtonGroup","Button","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","MenuEditAdmin","_s","$RefreshSig$","ToggleButtonExample","checked","setChecked","radioValue","setRadioValue","radios","name","value","children","map","radio","idx","id","type","variant","onChange","e","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Gra≈æi Diena/Desktop/Programmin/School/Praktika/front/src/components/MenuEditAdmin/MenuEditAdmin.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nfunction MenuEditAdmin() {\r\n\r\n    function ToggleButtonExample() {\r\n        const [checked, setChecked] = useState(false);\r\n        const [radioValue, setRadioValue] = useState('1');\r\n\r\n\r\n        const radios = [\r\n            { name: 'Active', value: '1' },\r\n            { name: 'Radio', value: '2' },\r\n            { name: 'Radio', value: '3' },\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                {/* <ButtonGroup className=\"buttonNavigation\" aria-label=\"Basic example\">\r\n                <Button variant=\"secondary\">Left</Button>\r\n                <Button variant=\"secondary\">Middle</Button>\r\n                <Button variant=\"secondary\">Right</Button>\r\n            </ButtonGroup> */}\r\n                <ButtonGroup>\r\n                    {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            key={idx}\r\n                            id={`radio-${idx}`}\r\n                            type=\"radio\"\r\n                            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={radioValue === radio.value}\r\n                            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n                        >\r\n                            {radio.name}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default MenuEditAdmin;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,SAASC,aAAaA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAErB,SAASC,mBAAmBA,CAAA,EAAG;IAAAF,EAAA;IAC3B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;IAC7C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;IAGjD,MAAMgB,MAAM,GAAG,CACX;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAI,CAAC,EAC9B;MAAED,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAI,CAAC,EAC7B;MAAED,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAI,CAAC,CAChC;IAED,oBACIb,OAAA,CAAAE,SAAA;MAAAY,QAAA,eAMId,OAAA,CAACJ,WAAW;QAAAkB,QAAA,EACPH,MAAM,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACnBjB,OAAA,CAACF,YAAY;UAEToB,EAAE,EAAG,SAAQD,GAAI,EAAE;UACnBE,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEH,GAAG,GAAG,CAAC,GAAG,iBAAiB,GAAG,gBAAiB;UACxDL,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEG,KAAK,CAACH,KAAM;UACnBN,OAAO,EAAEE,UAAU,KAAKO,KAAK,CAACH,KAAM;UACpCQ,QAAQ,EAAGC,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACC,aAAa,CAACV,KAAK,CAAE;UAAAC,QAAA,EAErDE,KAAK,CAACJ;QAAI,GATNK,GAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUE,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC,gBAChB,CAAC;EAGX;EAACvB,EAAA,CArCQE,mBAAmB;AAsChC;AAACsB,EAAA,GAxCQzB,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}